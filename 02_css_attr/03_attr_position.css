body {
    margin: 0;
    padding: 0;
    background: linear-gradient(white orange);
    height: 2000px;
}

div {
    width: 100px;
    height: 100px;
    font-weight: 700;
    text-align: center;
    line-height: 100px;
}

/* position: static; (default) */
/* 
- 기본 값이기 때문에 작성하지 않아도 됨 (주석처리를 하던 안하던 결과가 동일)
- inline 요소라면 왼쪽에서 오른쪽으로 쌓임
- block 요소라면 위에서 아래로 쌓임
*/

/* top  */

.position-static {
    /* position: static; 기본값이기 때문에  */
    background-color: pink;
    /* top: 100px; */
}

/* position: relative; -> 상대 위치 */
/* 일반적인 흐름에 따라 배체하되, top, bottom, left, right 속성을 사용해 위치 지정 */
/* 
- 자신의 원래 있어야 하는 위치 기준
- top : 위에서 부터의 여백
- bottom : 아래서부터의 여백
- right : 오른쪽으로부터의 여백
- left : 왼쪽으로부터의 여백
*/
/* 자기의 자리를 벗어나도 원래 자리가 비어 있음. ....  */
.position-relative {
    background-color: lightblue;
    position: relative;
    /* left: 100px */
    /* top: 50px */
    right: 15px;
    bottom: 30px
}

/* position: absolute; -> 절대 위치 */
/* 
- 기준점
    - position: static이 아닌 값을 가지는 제일 가까운 조상 기준 
    - 만약 position: static이 아닌 값을 가진 조상이 없다면 viewport를 기준
    - 특정 요소를 기준 삼아 top, bottom, left, right 속성을 지정함
*/
/* 문서 흐름을 벗어남 -> 자기 자리가 살아짐 */
.position-absolute {
    background-color: yellow;
    position: absolute;
    top: 0;
}

/* position: fixed; -> 고정 위치 */
/* 
- viewport 기준으로 특정 위치에 배치
- 스크롤 되어도 움직이지 않음 -> header, top-button 제작 시 많이 사용
- top, bottom, left, right 속성 중 하나 이상 지정
*/

.position-fixed {
    background-color: rgb(255, 192, 75);
    position: fixed;
    right: 30px;
    bottom: 30px;
}

/* position: sticly; -> top 속성의 위치에 도달했을 때 부터 해당 위치에 고정된다 */
/* 부모 요소 내에서만 sticky로 작동함 -> html 구조 매우 중요 */
.position-sticky {
    position: sticky;
    top: 0; /* 뷰포트의 최상단에 도달했을 때 고정 */
    background-color: palegreen;
}

.sticky-container {
    height: 1200px;
    width: 100vw;
    background color: pink;
}

