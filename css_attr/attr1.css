.px {
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* em : 부모 요소의 font size가 기준 -> 사용 시 주의 필요 */
.em-text {
        /* 부모 요소의 font size를 받아오기 때문에 점점 커짐 */
    font-size: 2em;
}

/* rem : root(html)의 font-size가 기준 -> 중첩되어도 영향 X */
/* html의 font-size를 지정하지 않으면 기본적으로 1rem = 16px */
.rem-text {
    font-size: 2rem;
}

/* em, rem 폰트 크기 속성에만 사용하는 것 아님 */

.em {
    width: 10em;
    height: 10em;
    background-color: lightgrey;
}

.em-parents {
    font-size: 10px;
    background-color: violet;
}

.rem {
    width: 10rem;
    height: 10rem;
    background-color: lightgreen;
}

.rem-parents {
    font-size: 30px;
    background-color: gold;
}

.percent {
    width: 50%;
    background-color: palevioletred;
}

.percen-parents {
    /* width: 300px; */
    width: 90%;
    background-color: aqua;
}

.vh {
    width: 30vh;
    height: 30vh;
    background-color: chocolate;
}

.vw {
    width: 30vw;
    height: 130vw;
    background-color: thistle;
}

.d-block {
    /* display: block ; -> div 요소의 default 속성값 */
    background-color: antiquewhite;
    border: 1px solid yellow;
    width: 100px;
    height: 100px;
    /* */
    /* */
    /* */
    margin: 10px 20px 30px 40px;
    margin: 10px 20px
    /* */
    padding: 30px
    /* */
    padding: 50px
}

.d-inline {
    /* display: inline; -> span 요소의 default 속성값 */
    display: block;
    background-color: lightgray;
    border: 1px solid darkblue;
    margin: 50px;
    padding: 30px;

    /* inline 요소는 컨텐트의 트기에 딱 맞춰 너비와 높이가 지정되므로 */
    /* width: 100px;
    height: 100px; */
    /* width heidht 속성 지정 불가  */

    /*  */
    /*  */
    /*  
    */
    

}

.d-inline-block {
    /* block 요소처럼 width와 height를 지정할 수 있음 */
    /* inline 요소처럼 content 크기에 딱 맞춰 너비와 높이가 지정됨으로*/
    /*  */
    /*  */

    width: 200px;
    height: 200px;
    display: inline-block;
    border: 1px solid red;
    font-size: 30px;
}


.container {
    width: auto;
    height: 200px;
    background-color: orange;
}
.container * {
    display: inline-block;
    width: 200px;
    height: 100px;
    margin-right: 30px;
}

.html {
    background-color: skyblue;
}

.css {
    background-color: green;
}

.javascript {
    background-color: red;
}

/* max-width와 min width */

.parent {
    width: 400px;
    height: 200px;
    background-color: pink;
}

.min {
    /* 최소 넓이므로 400px 보다 늘어날 수 있지만 줄어들 수 있음 */
    min-width: 500px;
    height: 100px;
    background-color: purple;
}

.max {
    /* 최소 넓이므로 400px 보다 줄어들 수 있지만 늘어날 수 있음 */
    min-width: 400px;
    height: 100px;
    background-color: yellowgreen;
}

.header {
    height: 130px;
    background-color: aqua;
}

.calc {
    width: calc(100vw - 300px);
    height: calc(100vh - 130px);
    background-color: yellow;
}

/* heidht 도 마찬가지*/
/* 하지만 max width와 min-width, max-height와 min height는 주로 반응형을 ... */


/* border & border radious */

.border {
    /* border -> 단축속성 */
    border: 3px solid black;
    /* 굵기 (border-width), 스타일 (border-style), 색상(border-color) */
    border-width: 2px;
    border-style: dotted;
    border-color: red orange purple green;
    border-bottom: 5px solid gray;
}

.rounded {
    height: 80px;
    width: 150px;
    border-radius: 40px;
    border-radius: 5px 10px;
    border-radius: 20px 0px 5px;
    border-radius: 5px 10px 15px 20px;

}

/* box-sizing */
/* 요소의 크기 계산 기준을 지정하는 속성 */

.box-sizing {
    width: 100px;
    height: 100px;
    padding: 20px;
    border: 15px solid red;
    background-color: orange;
}

.content-box {
    box-sizing: content-box;
}

.border-box {
    box-sizing: border-box
}